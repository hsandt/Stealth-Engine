# Reference
# - https://github.com/Microsoft/GSL/blob/master/.travis.yml

language: cpp

matrix:
  include:
    - os: osx
      env: COMPILER=g++-7
    - os: osx
      env: COMPILER=clang++  # osx simply names "clang" the latest clang installed with Xcode toolchain
    - os: linux
      env: COMPILER=g++-7
      addons:
        apt:
          packages:
            - xorg-dev
            - g++-7
          sources:
            - ubuntu-toolchain-r-test
    - os: linux
      env: COMPILER=clang++-5.0
      addons:
        apt:
          packages:
            - xorg-dev
            - clang-5.0
          sources:
            - llvm-toolchain-trusty-5.0

env:
  global:
    - PREMAKE_VERSION="5.0.0-alpha12"
  linux:
    - JOBS="$(nproc)"  # should be ~2
  osx:
    - JOBS="$(sysctl -n hw.ncpu)"  # should be 2

cache:
  apt: true  # private repositories only
  directories:
    - premake-${PREMAKE_VERSION}

before_install:
  # install g++-7 for OSX
  # remove c++ include folder symlink from brew-cask oclint, we don't need it and Cask devs say they don't want
  # to auto-link themselves anymore
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      rm /usr/local/include/c++
      brew install gcc@7
    fi

install:
  # Install premake if not already downloaded, built and up-to-date
  - |
    if [[ -z "$(ls -A premake-${PREMAKE_VERSION})" || ! -x "$HOME/bin/premake5" || "$(premake5 --version)" == *"${PREMAKE_VERSION}" ]]; then
      wget "https://github.com/premake/premake-core/releases/download/v${PREMAKE_VERSION}/premake-${PREMAKE_VERSION}-src.zip"
      rm -rf "premake-${PREMAKE_VERSION}"
      unzip "premake-${PREMAKE_VERSION}-src.zip"
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        PREMAKE_BUILD_DIR="gmake.unix"
      elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        PREMAKE_BUILD_DIR="gmake.macosx"
      fi
    fi
  - pushd "premake-${PREMAKE_VERSION}/build/${PREMAKE_BUILD_DIR}"
  - make ${MAKEFLAGS}
  - popd
  - mkdir "$HOME/bin" -p
  - cp "premake-${PREMAKE_VERSION}/bin/release/premake5" "$HOME/bin/premake5"

before_script:
  # Build Box2D
  - pushd "third-party/Box2D/Box2D"
  - premake5 gmake
  - pushd "Build/gmake"
  - export config=release
  - make Box2D ${MAKEFLAGS}  # we don't need to build the examples
  - popd
  - popd

script:
  # Set the ${CXX} variable properly (don't do it in env, it is too early and would be overriden by compiler settings
  # just afterward)
  # and do it after the initial package install to have g++-7 available if used
  - export CXX=${COMPILER}
  - ${CXX} --version
  - mkdir -p build/release
  - cd build/release
  # Fail on first error
  - set -e
  # Optimization: consider cmake -GNinja and ninja
  - cmake ../.. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
  - make -j${JOBS}
  - ctest --output-on-failure

