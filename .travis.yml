language: cpp

# Clang version in log is 5.0.0, but I don't believe it as it doesn't support C++14 features like enable_if_t
# https://stackoverflow.com/questions/35110123/travis-ci-with-c14-and-linux
matrix:
  include:
    - os: osx
      env: CMAKE_CXX_COMPILER_ID=GNU COMPILER_NAME=gcc CC=gcc-6 CXX=g++-6  # required to force osx to acknowledge GNU and use the correct std=c++17
    - os: osx
      env: CMAKE_C_COMPILER="$(which clang)" CMAKE_CXX_COMPILER=$(which clang++) CMAKE_CXX_COMPILER_ID=AppleClang COMPILER_NAME=clang CC=clang-5.0 CXX=clang++-5.0
    - os: linux
      env: CMAKE_C_COMPILER="$(which gcc)" CMAKE_CXX_COMPILER=$(which g++) CMAKE_C_COMPILER_ID=GNU CMAKE_CXX_COMPILER_ID=GNU COMPILER_NAME=gcc CC=gcc-6 CXX=g++-6
      addons:
        apt:
          packages:
            - xorg-dev
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
    - os: linux
      env: CMAKE_C_COMPILER=$(which clang) CMAKE_CXX_COMPILER=$(which clang++) CMAKE_CXX_COMPILER_ID=AppleClang COMPILER_NAME=clang CC=clang-5.0 CXX=clang++-5.0
      addons:
        apt:
          packages:
            - xorg-dev
            - clang-3.8
          sources: sources
            - llvm-toolchain-precise-5.0

env:
  global:
    - PREMAKE_VERSION="5.0.0-alpha12"
  linux:
    - MAKEFLAGS="-j $(nproc)"  # should be ~2
  osx:
    - MAKEFLAGS="-j $(sysctl -n hw.ncpu)"  # should be 2

cache:
  apt: true  # private repositories only
  directories:
    - premake-${PREMAKE_VERSION}

install:
  # if premake source has not been downloaded or built with the right version, download it and build it now
  - wget "https://github.com/premake/premake-core/releases/download/v${PREMAKE_VERSION}/premake-${PREMAKE_VERSION}-src.zip"
  - |
    if [[ -z "$(ls -A premake-${PREMAKE_VERSION})" || ! -x "$HOME/bin/premake5" || "$(premake5 --version)" == *"${PREMAKE_VERSION}" ]]; then
      rm -rf "premake-${PREMAKE_VERSION}"
      unzip "premake-${PREMAKE_VERSION}-src.zip"
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        PREMAKE_BUILD_DIR="gmake.unix"
      elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        PREMAKE_BUILD_DIR="gmake.macosx"
      fi
    fi
  - pushd "premake-${PREMAKE_VERSION}/build/${PREMAKE_BUILD_DIR}"
  - make ${MAKEFLAGS}
  - popd
  - mkdir "$HOME/bin" -p
  - cp "premake-${PREMAKE_VERSION}/bin/release/premake5" "$HOME/bin/premake5"

before_script:
  # build Box2D
  - pushd "third-party/Box2D/Box2D"
  - premake5 gmake
  - pushd "Build/gmake"
  - export config=release
  - make Box2D ${MAKEFLAGS}  # we don't need to build the examples
  - popd
  - popd

script:
#  - |
#    set_compiler_paths () {
#      CMAKE_C_COMPILER="$(which $C_COMPILE)"
#      CMAKE_CXX_COMPILER="$(which g++)"
#    }
  - mkdir -p build/release
  - cd build/release
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_CXX_COMPILER_ID=${CMAKE_CXX_COMPILER_ID} -DBUILD_TESTS=ON ../..
  - make ${MAKEFLAGS}
  - make test ${MAKEFLAGS}

