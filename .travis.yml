language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

addons:
  apt:
    packages:
      - xorg-dev


env:
  global:
    - PREMAKE_VERSION="5.0.0-alpha12"
    - MAKEFLAGS="-j 2"
#  linux:
#    - MAKEFLAGS="-j $(nproc)"  # should be ~2
#  osx:
#    - MAKEFLAGS="-j $(sysctl -n hw.ncpu)"  # should be 2

cache:
  directories:
    - premake-${PREMAKE_VERSION}

install:
  - wget "https://github.com/premake/premake-core/releases/download/v${PREMAKE_VERSION}/premake-${PREMAKE_VERSION}-src.zip"
  # if premake source has not been downloaded or built with the right version, download it and build it now
  - |
    if [[ -z "$(ls -A premake-${PREMAKE_VERSION})" || ! -x "$HOME/bin/premake5" || "$(premake5 --version)" == *"${PREMAKE_VERSION}" ]]; then
      unzip "premake-${PREMAKE_VERSION}-src.zip"
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        PREMAKE_BUILD_DIR="gmake.unix"
      elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        PREMAKE_BUILD_DIR="gmake.macosx"
      fi
    fi
  - pushd "premake-${PREMAKE_VERSION}/build/${PREMAKE_BUILD_DIR}"
  - make ${MAKEFLAGS}
  - popd
  - mkdir "$HOME/bin" -p
  - cp "premake-${PREMAKE_VERSION}/bin/release/premake5" "$HOME/bin/premake5"

# Have to cd into directory and back out since premake5 doesn't appear to accept a directory argument.
before_script:
  - pushd "third-party/Box2D/Box2D"
  - premake5 gmake
  - pushd "Build/gmake"
  - export config=release
  - make ${MAKEFLAGS}
  sysctl -n hw.ncpu
  - popd
  - popd

script:
  - mkdir -p build/release
  - cd build/release
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ../..
  - make ${MAKEFLAGS}
  - make test ${MAKEFLAGS}

